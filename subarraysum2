#include<iostream>
using namespace std;
#include <iostream>
using namespace std;
int largestsubarraysum1(int arr[], int n){
  int largest_sum=0;
  for (int i=0; i<n; i++){
    for (int j=i; j<n; j++){
      int subarraysum = 0;
      for (int k=i; k<=j; k++){
        //cout<<arr[k]<<",";
        subarraysum += arr[k];
      }
      //put a check is subarraysum>largestsum
      largest_sum = max(largest_sum, subarraysum);
    }
  }
  return largest_sum;
}

int largestsubarraysum2(int arr[], int n){
  int prefix[100]={0};
  prefix[0]=arr[0];
  for (int i=1; i<n; i++){
    prefix[i]= prefix[i-1] + arr[i];
  }
  //largest sum login
  int largest_sum=0;
  for(int i=0; i<n; i++){
    for (int j=i; j<n; j++){
      int subarraysum = i>0 ? prefix[j] - prefix[i-1] : prefix[j];
      //put a check is subarraysum>largestsum
      largest_sum=max(largest_sum, subarraysum);
    }
  }
  return largest_sum;
}
int main(){
  //Array containing
  int arr[]={-2, 3, 4, -1, 5, -12, 6, 1, 3};
  int n=sizeof(arr)/sizeof(int);
  cout<<largestsubarraysum1(arr, n)<<endl;
  cout<<largestsubarraysum2(arr, n)<<endl;
  return 0;
  
}
